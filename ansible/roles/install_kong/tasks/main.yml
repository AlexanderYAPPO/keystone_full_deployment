---
#- name: Apt-get update
#  apt:
#    update_cache: yes
#  sudo: yes
- name: del
  shell: luarocks remove kong
  sudo: yes
  ignore_errors: yes
- name: del
  shell: luarocks remove lua-resty-http
  sudo: yes
  ignore_errors: yes

#- name: Update ca-certificates
#  apt:
#    name: ca-certificates
#    state: latest
#  sudo: yes

#- name: Install apt_key dependencies
#  apt:
#    name: '{{ item }}'
#  with_items: [python-urllib3, python-openssl, python-pyasn1, python-pip]
#  when: ansible_distribution == 'Ubuntu' or ansible_distribution_release == 'trusty'
#  sudo: yes

#- name: Install ndg-httpsclient
#  command: pip install ndg-httpsclient
#  when: ansible_distribution == 'Ubuntu' or ansible_distribution_release == 'trusty'
#  sudo: yes

#- name: Download kong deb
#  get_url:
#    url: https://bintray.com/kong/kong-community-edition-deb/download_file?file_path=dists/kong-community-edition-0.12.1.trusty.all.deb
#    dest: /home/{{ global_os_user }}/kong.deb
#  retries: 20
#  sudo: yes

#- name: Install kong dependencies
#  apt:
#    name: '{{ item }}'
#  with_items: [libpcre3, openssl, procps, perl]
# # when: ansible_distribution == 'Ubuntu' or ansible_distribution_release == 'trusty'
#  sudo: yes


#- name: Install kong
#  shell: dpkg -i /home/{{ global_os_user }}/kong.deb
#  sudo: yes
# =============================
#- name: Download deb
#  shell: wget {{ kong_source_deb }} {{ kong_working_dir }}/kong.deb 
#  sudo: yes

#- name: Install dependencies
#  apt: pkg={{ item }} state=installed
#  with_items: "{{kong_dependencies}}"
#  sudo: yes

#- name: Install deb
#  apt: deb={{ kong_working_dir }}/kong.deb
#  sudo: yes

#- name: Ensure kong group is present
#  user: name={{ kong_group }} state=present
#  sudo: yes

#- name: Ensure kong user is present
#  user: name={{ kong_user }} group={{ kong_group }}
#  sudo: yes

#- name: Setup configuration
#  template: src=etc/kong.yml.j2 dest="{{ kong_conf_dest }}"
#  notify:
#   - reload kong
#  sudo: yes

#- name: Ensure log service directory exists
#  file: path="{{ kong_service_log_dir }}" state=directory owner="{{ kong_user }}" group="{{ kong_group }}" mode=0755
#  sudo: yes

#- name: Setup init.d script 
#  template: src=etc/kong.init.d.j2 dest="/etc/init.d/kong" mode="u=rwx,g=rx,o=rx"
#  notify:
#   - restart kong
#  sudo: yes

#- name: Setup service
#  service: name=kong state={{ kong_service_state }} enabled={{ kong_service_enabled }}
#  sudo: yes

- name: Install git
  apt: pkg=git state=installed
  sudo: yes

- name: Install unzip
  apt: pkg=unzip state=latest
  sudo: yes

#- name: Install luarocks
#  apt: pkg=luarocks state=latest
#  sudo: yes

#- name: Download the LuaRocks tarball
#  get_url: url=http://luarocks.org/releases/luarocks-2.1.2.tar.gz dest=/tmp/luarocks.tar.gz mode=0440
#  sudo: yes  

#- name: Extract LuaRocks tarball
#  command: chdir=/tmp/ /bin/tar zxf luarocks.tar.gz
#  sudo: yes

#- name: Configure LuaRocks
#  command: chdir=/tmp/luarocks-2.1.2/ /tmp/luarocks-2.1.2/configure --prefix=/usr/local/openresty/luajit --with-lua=/usr/local/openresty/luajit/ --lua-suffix=jit-2.1.0-alpha --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1
#  sudo: yes

#- name: Compile LuaRocks
#  command: chdir=/tmp/luarocks-2.1.2 make build
#  sudo: yes

#- name: Install LuaRocks
#  command: chdir=/tmp/luarocks-2.1.2 make install
#  sudo: yes

#- shell: mv /home/modis/keystone_plugin /home/modis/keystone_plugin_lena

- name: Download keystone plugin from git
  git:
#    repo: git@github.com:IgorBMSTU/keystone_plugin.git
    repo: https://github.com/IgorBMSTU/keystone_plugin.git
    dest: /home/{{ global_os_user }}/keystone_plugin
    clone: yes
    version: policies
  sudo: yes

#- name: Make keystone
#  shell: luarocks make /home/{{ global_os_user }}/keystone_plugin/kong-plugin-keystone-0.1.0-1.rockspec
##  ignore_errors: yes
#  sudo: yes
- name: del
  shell: luarocks remove kong-plugin-keystone
  sudo: yes
  ignore_errors: yes

- name: remove lua-resty-http
  shell: luarocks remove lua-resty-http
  sudo: yes
  ignore_errors: yes
- name: install kong
  shell: luarocks install kong
  sudo: yes
  ignore_errors: yes



- name: Copy lua requirement plugins
  copy:
    src: /home/{{ global_os_user }}/keystone_full_deployment/ansible/roles/install_kong/files/{{item}}
    dest: /home/{{ global_os_user }}/{{item}}
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  with_items:
        - luafilesystem-1.7.0-2.linux-x86_64.rock
        - ansicolors-1.0.2-3.all.rock
        - bit32-5.3.0-1.linux-x86_64.rock
        - date-2.1.2-1.all.rock
        - etlua-1.3.0-1.all.rock
        - luacrypto-0.3.2-2.linux-x86_64.rock
        - kong-lapis-1.6.0.1-1.all.rock
        - loadkit-1.1.0-1.all.rock
        - lpeg-1.0.1-1.linux-x86_64.rock
        - lrandom-20120430.51-1.linux-x86_64.rock
        - lua-cassandra-1.2.3-0.all.rock
        - lua-resty-dns-client-0.6.2-1.all.rock
        - lua-resty-http-0.08-0.all.rock
        - lua-resty-iputils-0.3.0-1.all.rock
        - lua-resty-jit-uuid-0.0.5-1.all.rock
        - lua-resty-mediador-0.1.2-1.all.rock
        - lua-resty-worker-events-0.3.0-1.all.rock
        - lua_system_constants-0.1.2-0.linux-x86_64.rock
        #- kong-plugin-keystone-0.1.0-1.all.rock
        - lua_pack-1.0.5-0.linux-x86_64.rock
  sudo: yes
  when: 1 < 0
 
- name: Install luarocks plugins
  shell: luarocks install /home/{{ global_os_user }}/{{item}}
  with_items:
        - luafilesystem-1.7.0-2.linux-x86_64.rock 
        - ansicolors-1.0.2-3.all.rock
        - bit32-5.3.0-1.linux-x86_64.rock
        - date-2.1.2-1.all.rock
        - etlua-1.3.0-1.all.rock
        - luacrypto-0.3.2-2.linux-x86_64.rock
        - kong-lapis-1.6.0.1-1.all.rock
        - loadkit-1.1.0-1.all.rock
        - lpeg-1.0.1-1.linux-x86_64.rock
        - lrandom-20120430.51-1.linux-x86_64.rock
        - lua-cassandra-1.2.3-0.all.rock
        - lua-resty-dns-client-0.6.2-1.all.rock
        - lua-resty-http-0.08-0.all.rock
        - lua-resty-iputils-0.3.0-1.all.rock
        - lua-resty-jit-uuid-0.0.5-1.all.rock
        - lua-resty-mediador-0.1.2-1.all.rock
        - lua-resty-worker-events-0.3.0-1.all.rock
        - lua_system_constants-0.1.2-0.linux-x86_64.rock
        #- kong-plugin-keystone-0.1.0-1.all.rock
        - lua_pack-1.0.5-0.linux-x86_64.rock
  ignore_errors: yes
  sudo: yes
  when: 1 < 0

- name: Make keystone
  shell: luarocks make kong-plugin-keystone-0.1.0-1.rockspec
#  ignore_errors: yes
  args:
    chdir: /home/{{ global_os_user }}/keystone_plugin/
  sudo: yes
 

- name: Copy template of kong.conf
  template:
    src: /home/{{ global_os_user }}/keystone_full_deployment/ansible/roles/install_kong/templates/etc/kong.conf.j2
    dest: /etc/kong/kong.conf
  sudo: yes

- name: Copy admin_creds
  copy:
    src: /home/{{ global_os_user }}/keystone_full_deployment/ansible/roles/install_kong/files/admin_creds
    dest: /etc/kong/admin_creds
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  sudo: yes



- name: Copy bootstrap.py
  copy:
    src: /home/{{ global_os_user }}/keystone_full_deployment/ansible/roles/install_kong/files/bootstrap.py
    dest: /home/{{ global_os_user }}/bootstrap.py
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  when: inventory_hostname == "{{ hostvars[inventory_hostname]['groups']['my_name_keystone_kong-slave-1'][0] }}"

- name: Copy bootstrap_fernet.py
  copy:
    src: /home/{{ global_os_user }}/keystone_full_deployment/ansible/roles/install_kong/files/bootstrap_fernet.py
    dest: /home/{{ global_os_user }}/bootstrap_fernet.py
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  when: inventory_hostname == "{{ hostvars[inventory_hostname]['groups']['my_name_keystone_kong-slave-1'][0] }}"
#- name: copy kong.conf file to etc
#  shell: cp /home/{{ global_os_user }}/keystone_plugin/kong.conf /etc/kong/kong.conf
#  sudo: yes

#- name: kong migrations
#  shell: kong migrations up -c /etc/kong/kong.conf
#  sudo: yes
#  ignore_errors: yes

#- name: start kong
#  shell: kong start -c /etc/kong/kong.conf
#  args:
#    chdir: /home/{{ global_os_user }}/keystone_plugin/
#  sudo: yes


- name: nginx conf #1
  copy:
    src: files/nginx-kong_tuned.conf
    dest: /etc/kong/nginx-kong_tuned.conf
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  sudo: yes

- name: nginx conf #2
  copy:
    src: files/nginx_tuned.conf
    dest: /etc/kong/nginx_tuned.conf
    owner: "{{ global_os_user }}"
    group: "{{ global_os_user }}"
    mode: 0644
  sudo: yes

