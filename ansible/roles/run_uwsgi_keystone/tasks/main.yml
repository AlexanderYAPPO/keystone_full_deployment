
- name: Configure Keystone database
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: database
      option: connection
      value: "{{ global_db }}://keystone:{{ global_keystone_password }}@{{ hostvars[inventory_hostname]['groups']['my_name_keystone-master'][0] }}/keystone"
  become: yes


- name: Configure password_hash_algorithm
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: identity
      option: password_hash_algorithm
      value: "bcrypt"
  become: yes
- name: Configure password_hash_algorithm
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: identity
      option: password_hash_rounds
      value: "4"
  become: yes

- name: Configure DEFAULT section
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: DEFAULT
      option: memcached_servers
      value: "{{ hostvars[inventory_hostname]['groups']['my_name_keystone_kong-cache'][0] }}"
  become: yes
- name: Configure Keystone database2
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: DEFAULT
      option: verbose
      value: "false"
  become: yes




- name: Configure token
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: token
      option: provider
      value: "{{ global_token_provider }}"
  become: yes
- name: Configure fernet tokens directory
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: fernet_tokens
      option: key_repository
      value: "/etc/keystone/fernet-keys/"
  become: yes
- name: Configure cache section option "enable"
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: cache
      option: enabled
      value: "True" # True
  become: yes
- name: Configure cache section option "config_prefix"
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: cache
      option: config_prefix
      value: "cache.keystone"
  become: yes
- name: Configure cache section option "expiration_time"
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: cache
      option: expiration_time
      value: 300
  become: yes
- name: Configure cache section option "backend"
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: cache
      option: backend
      value: "dogpile.cache.memcached"
  become: yes
- name: Configure cache section option "memcache_servers"
  ini_file: >
    dest=/etc/keystone/keystone.conf
    section="{{ item.section }}"
    option="{{ item.option }}"
    value="{{ item.value }}"
  with_items:
    - section: cache
      option: memcache_servers
      value: "{{ hostvars[inventory_hostname]['groups']['my_name_keystone_kong-cache'][0] }}"
  become: yes
- name: Create fernet tokens
  shell: "{{ keystone_dir }}/venv/bin/keystone-manage fernet_setup"
  #ignore_errors: yes
  when: global_token_provider == "fernet"
  become: "modis"
  #when: inventory_hostname == groups[cluster_name + '-slave-1'][0]
- name: pause
  pause: seconds=7

- name: Sync Keystone database
  command: '/bin/sh -c "{{ keystone_dir }}/venv/bin/keystone-manage db_sync" keystone'
  ignore_errors: yes
  become: modis
  when: inventory_hostname == "{{ hostvars[inventory_hostname]['groups']['my_name_keystone_kong-slave-1'][0] }}"

#- debug: msg="{{inventory_hostname}}, {{hostvars[inventory_hostname].openstack.private_v4}}"

- include: run_uwsgi.yml

- pause: seconds=5

