- name: copy nginx config
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  sudo: yes

- name: Copy keystone-paste.ini
  copy: src=keystone-paste.ini dest=/etc/keystone/keystone-paste.ini owner={{ global_os_user }}

- name: Deploy policy.json file
  copy: src=policy.json dest=/etc/keystone/policy.json owner={{ global_os_user }}


- name: Remove default config
  shell: "rm -rf /etc/nginx/sites-enabled/*"
  become: yes
  ignore_errors: yes
- name: Remove default config

  shell: "rm -rf /etc/nginx/sites-available/*"
  become: yes
  ignore_errors: yes

- name: Restart nginx
  service: name=nginx state=restarted
  sudo: yes

- name: Create server blocks
  template: src=keystone_server_block.j2 dest=/etc/nginx/sites-available/keystone
  sudo: yes

- name: check keystone slink is present
  stat: path=/etc/nginx/sites-enabled/keystone
  register: link_is_ok

- shell: "ln -s /etc/nginx/sites-available/keystone /etc/nginx/sites-enabled"
  sudo: yes
  when: link_is_ok.stat.exists == False

- name: copy uwsgi ini file
  template: src=uwsgi-keystone.ini.j2 dest=/tmp/uwsgi-keystone-{{ item.endpoint_role }}.ini owner={{ global_os_user }}
  with_items:
    - { endpoint_role: 'admin' }
  #  - { endpoint_role: 'main' }
  sudo: yes



- name: Running Keystone over uWSGI #only admin supported so far
  shell: " {{ keystone_dir }}/venv/bin/uwsgi --enable-threads --ini /tmp/uwsgi-keystone-admin.ini --daemonize2 /dev/null -L"
  with_items:
    - 'admin'
  #  - 'main'

- name: Restart nginx
  service: name=nginx state=restarted
  sudo: yes

- shell: "{{ keystone_dir }}/venv/bin/pip install python-memcached"

- shell: "{{ keystone_dir }}/venv/bin/pip install psycopg2-binary"

- name: bootstrap
  shell: "{{ keystone_dir }}/venv/bin/keystone-manage bootstrap --bootstrap-username admin --bootstrap-password tester --bootstrap-service-name admin --bootstrap-admin-url http://{{hostvars[inventory_hostname]['groups']['my_name_keystone-HAProxy'][0] }}:35357/v3 --bootstrap-public-url http://{{ hostvars[inventory_hostname]['groups']['my_name_keystone-HAProxy'][0] }}:5000/v3 --bootstrap-internal-url http://{{hostvars[inventory_hostname]['groups']['my_name_keystone-HAProxy'][0] }}:5000/v3 --bootstrap-project-name admin --bootstrap-role-name admin --bootstrap-region-id RegionOne"
  when: inventory_hostname == groups[cluster_name + '-slave-1'][0]



